# import Post, Vote, VoteType, UserRole, Category, SubCategory, AppState, PostWhereInput, PostOrderByInput, VoteWhereInput, VoteOrderByInput, SubCategoryWhereInput, SubCategoryOrderByInput  from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  posts(
    where: PostWhereInput
    orderBy: PostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Post!]!
  welcomePost: Post
  subCategories: [SubCategory!]!
  search(value: String!): SearchResults
  appState: AppState!
  me: User
}

type Mutation {
  # NOTE: User related mutations
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  forgetPassword(email: String!): User!
  resetPassword(resetPasswordToken: String!, newPassword: String!): AuthPayload!
  updatePassword(oldPassword: String!, newPassword: String!): User!
  validateEmail(emailToken: String!): User!

  # NOTE: Post related mutations
  createDraftPost(title: String!, text: String!): Post!
  publishPost(id: ID!): Post!
  deletePost(id: ID!): Post!
  addVoteToPost(postId: ID!, voteType: VoteType): Post!
  deleteVoteInPost(postId: ID!, voteId: ID!): Post!
}

type Subscription {
  posts: Post
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  role: UserRole!
  posts: [Post!]!
  votes: [Vote!]!
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  text: String!
  author: User!
  votes(
    where: VoteWhereInput
    orderBy: VoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Vote!]
  subCategories(
    where: SubCategoryWhereInput
    orderBy: SubCategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [SubCategory!]
  thumbnail: String
  VoteSummary: VoteSummary
}

type VoteSummary {
  likes: Int
  dislikes: Int
}

type SearchResults {
  posts: [Post]!
  subCategories: [SubCategory]!
  categories: [Category]!
}
